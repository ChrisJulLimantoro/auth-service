// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @db.Uuid @default(uuid())
  email   String   @unique
  password String

  roles    UserRole[]
  @@map("users")
}

model Role {
  id      String   @id @db.Uuid @default(uuid())
  name     String

  users    UserRole[]
  features FeatureRole[]

  @@map("roles")
}

model UserRole {
  id     String   @id @db.Uuid @default(uuid())
  user_id String  @db.Uuid
  role_id String  @db.Uuid
  company_id String @db.Uuid
  user   User     @relation(fields: [user_id], references: [id])
  role   Role     @relation(fields: [role_id], references: [id])
  company Company @relation(fields: [company_id], references: [id])

  @@map("user_roles")
}

model Company {
  id       String         @id @db.Uuid @default(uuid())
  name     String
  userRoles    UserRole[]

  @@map("companies")
}

model Feature {
  id     String   @id @db.Uuid @default(uuid())
  name    String
  routes     String

  roles   FeatureRole[]

  @@map("features")
}

model FeatureRole {
  id         String   @id @db.Uuid @default(uuid())
  feature_id String @db.Uuid
  role_id    String @db.Uuid

  feature    Feature  @relation(fields: [feature_id], references: [id])
  role       Role     @relation(fields: [role_id], references: [id])

  @@map("feature_roles")
}